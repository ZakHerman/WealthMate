<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sfPopup="clr-namespace:Syncfusion.XForms.PopupLayout;assembly=Syncfusion.SfPopupLayout.XForms"
             xmlns:textbox="clr-namespace:Syncfusion.SfNumericTextBox.XForms;assembly=Syncfusion.SfNumericTextBox.XForms"
             xmlns:progressBar="clr-namespace:Syncfusion.XForms.ProgressBar;assembly=Syncfusion.SfProgressBar.XForms"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.Portfolio.OwnedAssetDetailsPage">

    <NavigationPage.TitleView>
        <!--Name and Type of Asset in NavBar-->
        <AbsoluteLayout x:Name="NavBarLayout">
            <Label Text="{Binding OwnedAsset.AssetNameType}" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"
                   FontAttributes="Bold" TextColor="{DynamicResource TertiaryTextColor}" FontSize="20" />
        </AbsoluteLayout>
    </NavigationPage.TitleView>

    <ContentPage.Content>
        <StackLayout Padding="0,10" BackgroundColor="{DynamicResource SurfaceColor}">
            <!--Basic details of the OwnedAsset-->
            <Label Text="{Binding OwnedAsset.PurchaseDate, StringFormat='Date Purchased: {0:dd/MM/yy}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />

            <Label Text="{Binding OwnedAsset.PrincipalValue, StringFormat='Amount Invested: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />

            <Label Text="{Binding OwnedAsset.InterestRateToString, StringFormat='Interest Rate (per annum): {0:F}%'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />

            <Label Text="{Binding OwnedAsset.CompoundRateToString, StringFormat='Interest Reinvested: {0:S}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />

            <Label Text="{Binding OwnedAsset.Length, StringFormat='Length: {0:F} years'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center">
                <Label.Triggers>
                    <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.Length}" Value="0">
                        <Setter Property="Text" Value="Length: Unknown" />
                        <!--Changes value from 0 to unknown if length is not provided-->
                    </DataTrigger>
                </Label.Triggers>
            </Label>

            <Label Text="{Binding OwnedAsset.RegularPayment, StringFormat='Regular Payments: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="0,0,0,10">
                <Label.Triggers>
                    <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.RegularPayment}" Value="0">
                        <Setter Property="Text" Value="Regular Payments: None"/>
                        <!--Changes value from 0 to None if there are no regular payments-->
                    </DataTrigger>
                </Label.Triggers>
            </Label>

            <Label Text="{Binding OwnedAsset.CurrentValue, StringFormat='Current Value: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

            <Grid HorizontalOptions="Center" VerticalOptions="Center" Margin="0,-10,0,10">
                <!--Grid to display $ return and % return on one line-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Label Text="Total Return:" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Medium" HorizontalTextAlignment="End" VerticalTextAlignment="End" Grid.Column="0" Grid.Row="1"/>

                <Label Text="{Binding OwnedAsset.TotalReturn, StringFormat='{0:C}'}" FontSize="Medium" Grid.Column="1" Grid.Row="1" TextColor="{DynamicResource NegativeTextColor}">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.PositiveTotal}" Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                        </DataTrigger>

                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.TotalReturn}" Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <Label Text="{Binding OwnedAsset.TotalReturnRate, StringFormat='({0:F}%)'}" FontSize="Medium" Grid.Column="2" Grid.Row="1" TextColor="{DynamicResource NegativeTextColor}">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.PositiveTotal}" Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                        </DataTrigger>

                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.TotalReturn}" Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </Grid>

            <Label Text="Return Goal: " TextColor="{DynamicResource PrimaryTextColor}" FontSize="Medium" Margin="30,0,0,0"/>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <progressBar:SfLinearProgressBar Grid.Row="0" Grid.Column="0" TrackHeight="25" HeightRequest="25" Minimum="0" Progress="{Binding OwnedAsset.TotalReturn}"
                                                 Maximum="{Binding OwnedAsset.ReturnGoal}" Margin="30,0"/>
                <Label Grid.Row="0" Grid.Column="0" Text="{Binding OwnedAsset.ReturnGoalProgress, StringFormat='{0:F}%'}" FontSize="Medium"
                       HorizontalTextAlignment="Center" TextColor="{DynamicResource PrimaryTextColor}"/>
            </Grid>

            <Grid Margin="30,0,30,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Text="$0.00" FontSize="Medium" TextColor="{DynamicResource PrimaryTextColor}" HorizontalTextAlignment="Start"/>
                <Label Grid.Row="0" Grid.Column="1" Text="{Binding OwnedAsset.ReturnGoal, StringFormat='{0:C}'}" FontSize="Medium" TextColor="{DynamicResource PrimaryTextColor}" HorizontalTextAlignment="End"/>
            </Grid>

            <!--Buttons below details of OwnedAsset-->
            <Button Text="Edit Owned Asset" VerticalOptions="Center" HorizontalOptions="Center" Margin="0,20,0,0" Clicked="EditAssetClicked"/>
            <Button Text="Remove Owned Asset" VerticalOptions="Center" HorizontalOptions="Center" Clicked="RemoveAssetClicked"/>

          <!--Remove Asset Popup Box-->
          <sfPopup:SfPopupLayout x:Name="RemoveAssetConfirmationBox">
            <sfPopup:SfPopupLayout.PopupView>
              <sfPopup:PopupView HeaderTitle="Remove Asset?" ShowFooter="false">
                <sfPopup:PopupView.ContentTemplate>
                  <DataTemplate>
                    <StackLayout Padding="6,1,3,1" VerticalOptions="CenterAndExpand">
                      <Label Text="All shares and price details will be removed from your portfolio." HorizontalTextAlignment="Start" FontSize="12" TextColor="Black" />
                      <Button Text="Accept" VerticalOptions="EndAndExpand" HorizontalOptions="End" FontSize="14" TextColor="DarkRed" FontAttributes="Bold" Clicked="PopupAcceptRemoveClicked" />
                    </StackLayout>
                  </DataTemplate>
                </sfPopup:PopupView.ContentTemplate>
              </sfPopup:PopupView>
            </sfPopup:SfPopupLayout.PopupView>
          </sfPopup:SfPopupLayout>          
          
            <!--Edit Asset Popup Box-->
            <sfPopup:SfPopupLayout x:Name="popupLayout" IsOpen="false">
                <sfPopup:SfPopupLayout.PopupView>
                    <sfPopup:PopupView HeaderTitle="Edit Owned Asset Details" ShowFooter="false">
                        <sfPopup:PopupView.ContentTemplate>
                            <DataTemplate>
                                <ScrollView>
                                <StackLayout WidthRequest="300" HeightRequest="450">
                                    <Label Text="Edit interest rate:" TextColor="{DynamicResource PrimaryTextColor}" Margin="1" HorizontalTextAlignment="Start" FontSize="12" />
                                    <textbox:SfNumericTextBox x:Name="editInterestRate" Margin="3,3" ValueChangeMode="OnLostFocus" ParserMode="Decimal" ValueChanged="Handle_InterestRateChanged"/>
                                    
                                    <Label Text="Edit length:" TextColor="{DynamicResource PrimaryTextColor}" Margin="2,3" HorizontalTextAlignment="Start" FontSize="12" />
                                    <textbox:SfNumericTextBox x:Name="editLength" Margin="3,3" ValueChangeMode="OnLostFocus" ParserMode="Double"  ValueChanged="Handle_LengthChanged"/>

                                    <Label Text="Edit regular payments:" TextColor="{DynamicResource PrimaryTextColor}" Margin="3,3" HorizontalTextAlignment="Start" FontSize="12" />
                                    <textbox:SfNumericTextBox x:Name="editRegPayments" Margin="3,3" ValueChangeMode="OnLostFocus" ParserMode="Double" ValueChanged="Handle_RegularPaymentsChanged" />

                                    <Label Text="Edit return goal:" TextColor="{DynamicResource PrimaryTextColor}" Margin="3,3" HorizontalTextAlignment="Start" FontSize="12" />
                                    <textbox:SfNumericTextBox x:Name="editReturnGoal" Margin="3,3" ValueChangeMode="OnKeyFocus" ParserMode="Double" ValueChanged="Handle_ReturnGoalChanged" />

                                    <Button Text="Save" VerticalOptions="End" HorizontalOptions="Center" FontSize="14" TextColor="DarkGreen" BackgroundColor="LightGreen" Clicked="SaveInPopupClicked"/>
                                </StackLayout>
                                </ScrollView>
                            </DataTemplate>
                        </sfPopup:PopupView.ContentTemplate>
                    </sfPopup:PopupView>
                </sfPopup:SfPopupLayout.PopupView>
            </sfPopup:SfPopupLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>