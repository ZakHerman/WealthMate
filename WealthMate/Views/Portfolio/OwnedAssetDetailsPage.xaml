<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:progressBar="clr-namespace:Syncfusion.XForms.ProgressBar;assembly=Syncfusion.SfProgressBar.XForms"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.Portfolio.OwnedAssetDetailsPage"
             BackgroundColor="{DynamicResource BackgroundColor}">

    <NavigationPage.TitleView>
        <!--Name and Type of Asset in NavBar-->
        <AbsoluteLayout>
            <Label Text="{Binding OwnedAsset.AssetNameType}" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"
                   FontAttributes="Bold" TextColor="{DynamicResource TertiaryTextColor}" FontSize="20" />
        </AbsoluteLayout>
    </NavigationPage.TitleView>

    <ContentPage.Content>
        <ScrollView>
        <StackLayout Padding="0,10">
            <Frame Margin="20" BackgroundColor="{DynamicResource SurfaceColor}" CornerRadius="16">
                <StackLayout>
                    <!--Basic details of the OwnedAsset-->
                    <Label Text="{Binding OwnedAsset.PurchaseDate, StringFormat='Date Purchased: {0:dd/MM/yy}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />

                    <Label Text="{Binding OwnedAsset.PrincipalValue, StringFormat='Amount Invested: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />

                    <Label Text="{Binding OwnedAsset.InterestRateToString, StringFormat='Interest Rate (per annum): {0:F}%'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />

                    <Label Text="{Binding OwnedAsset.CompoundRateToString, StringFormat='Interest Reinvested: {0:S}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />

                    <Label Text="{Binding OwnedAsset.Length, StringFormat='Length: {0:N0} months'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center">
                        <Label.Triggers>
                            <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.Length}" Value="0">
                                <Setter Property="Text" Value="Length: Unknown" />
                                <!--Changes value from 0 to unknown if length is not provided-->
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Label Text="{Binding OwnedAsset.RegularPayment, StringFormat='Regular Payments: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="0,0,0,10">
                        <Label.Triggers>
                            <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.RegularPayment}" Value="0">
                                <Setter Property="Text" Value="Regular Payments: None"/>
                                <!--Changes value from 0 to None if there are no regular payments-->
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Label Text="{Binding OwnedAsset.CurrentValue, StringFormat='Current Value: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

                    <Grid HorizontalOptions="Center" VerticalOptions="Center" Margin="0,-10,0,10">
                        <!--Grid to display $ return and % return on one line-->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Label Text="Total Return:" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Medium" HorizontalTextAlignment="End" VerticalTextAlignment="End" Grid.Column="0" Grid.Row="1"/>

                        <Label Text="{Binding OwnedAsset.TotalReturn, StringFormat='{0:C}'}" FontSize="Medium" Grid.Column="1" Grid.Row="1" TextColor="{DynamicResource NegativeTextColor}">
                            <Label.Triggers>
                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.PositiveTotal}" Value="True">
                                    <!--Change text to green when positive return-->
                                    <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                                </DataTrigger>

                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.TotalReturn}" Value="0">
                                    <!--Change text to grey when no return-->
                                    <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>

                        <Label Text="{Binding OwnedAsset.TotalReturnRate, StringFormat='({0:F}%)'}" FontSize="Medium" Grid.Column="2" Grid.Row="1" TextColor="{DynamicResource NegativeTextColor}">
                            <Label.Triggers>
                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.PositiveTotal}" Value="True">
                                    <!--Change text to green when positive return-->
                                    <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                                </DataTrigger>

                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedAsset.TotalReturn}" Value="0">
                                    <!--Change text to grey when no return-->
                                    <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                    </Grid>
                </StackLayout>
            </Frame>

            <Label Text="Return Goal" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Medium" HorizontalOptions="Center" />
            
            <!--Grid to stack label on top of progress bar-->
            <Frame Margin="20,0,20,20" BackgroundColor="{DynamicResource SurfaceColor}" CornerRadius="16">
                <StackLayout>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        
                        <!--Retrun Goal progress bar-->
                        <progressBar:SfLinearProgressBar Grid.Row="0" Grid.Column="0" TrackHeight="25" HeightRequest="25" Minimum="0" Progress="{Binding OwnedAsset.TotalReturn}"
                                                         Maximum="{Binding OwnedAsset.ReturnGoal}" Margin="30,0" CornerRadius="32" />
                        <Label Grid.Row="0" Grid.Column="0" Text="{Binding OwnedAsset.ReturnGoalProgress, StringFormat='{0:F}%'}" FontSize="Medium"
                               HorizontalTextAlignment="Center" TextColor="Black" />
                    </Grid>

                    <Grid Margin="30,0,30,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Text="$0" FontSize="Medium" TextColor="{DynamicResource PrimaryTextColor}" HorizontalTextAlignment="Start"/>
                        <Label Grid.Row="0" Grid.Column="1" Text="{Binding OwnedAsset.ReturnGoal, StringFormat='{0:C0}'}" FontSize="Medium" TextColor="{DynamicResource PrimaryTextColor}" HorizontalTextAlignment="End"/>
                    </Grid>
                </StackLayout>
            </Frame>

            <!--Buttons below details of OwnedAsset-->
            <Grid Margin="20" ColumnSpacing="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*" />
                    <ColumnDefinition Width="50*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                </Grid.RowDefinitions>

                <Button Text="Remove" Grid.Column="0" VerticalOptions="CenterAndExpand" HorizontalOptions="FillAndExpand" BackgroundColor="{DynamicResource SurfaceColor}" 
                        TextColor="{DynamicResource ErrorColor}" CornerRadius="16" Clicked="RemoveAssetClicked" FontAttributes="Bold" />
                <Button Text="Edit" Grid.Column="1" VerticalOptions="CenterAndExpand" HorizontalOptions="FillAndExpand" BackgroundColor="{DynamicResource SurfaceColor}"
                        TextColor="{DynamicResource AcceptColor}" CornerRadius="16" Clicked="EditAssetClicked" FontAttributes="Bold" />
            </Grid>
        </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>