<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sfPopup="clr-namespace:Syncfusion.XForms.PopupLayout;assembly=Syncfusion.SfPopupLayout.XForms"
             xmlns:textbox="clr-namespace:Syncfusion.SfNumericTextBox.XForms;assembly=Syncfusion.SfNumericTextBox.XForms"
             xmlns:progressBar="clr-namespace:Syncfusion.XForms.ProgressBar;assembly=Syncfusion.SfProgressBar.XForms"
             xmlns:pickerClass="clr-namespace:WealthMate.Services"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.Portfolio.OwnedStockDetailsPage">

    <NavigationPage.TitleView>
        <!--Displays name and that it's a stock, as well as it's bought price in the nav bar-->
        <AbsoluteLayout>
            <Label Text="{Binding OwnedStock.AssetNameTypePurchasedPrice}" TextColor="{DynamicResource TertiaryTextColor}"
                   HorizontalTextAlignment="Center" VerticalTextAlignment="Center" FontAttributes="Bold" FontSize="20"/>
        </AbsoluteLayout>
    </NavigationPage.TitleView>

    <ContentPage.Content>
        <StackLayout Padding="0,10">
            <Frame Margin="20" BackgroundColor="{DynamicResource SurfaceColor}" CornerRadius="16">
                <StackLayout>
                    <!--Displays basic details of the OwnedStock-->
                    <Label Text="{Binding OwnedStock.PurchaseDate, StringFormat='Date Purchased: {0:dd/MM/yy}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

                    <Label Text="{Binding OwnedStock.SharesPurchased, StringFormat='Shares Purchased: {0:F}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

                    <Label Text="{Binding OwnedStock.PurchasedPrice, StringFormat='Purchased Price: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

                    <Label Text="{Binding OwnedStock.PrincipalValue, StringFormat='Purchased Value: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="0,0,0,10"/>

                    <Label Text="{Binding OwnedStock.CurrentPrice, StringFormat='Current Price: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

                    <Label Text="{Binding OwnedStock.CurrentValue, StringFormat='Current Value: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="0,0,0,10"/>

                    <Grid HorizontalOptions="Center" VerticalOptions="Center" Margin="0,0,0,10">
                        <!--Grid to display day returns $ value and % in one line-->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Label Text="Day Return:" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Medium" HorizontalTextAlignment="End" VerticalTextAlignment="End" Grid.Column="0" Grid.Row="0"/>

                        <Label Text="{Binding OwnedStock.DayReturn, StringFormat='{0:C}'}" FontSize="Small" Grid.Column="1" Grid.Row="0" VerticalOptions="Center" TextColor="{DynamicResource NegativeTextColor}">
                            <Label.Triggers>
                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.PositiveDayReturns}" Value="True">
                                    <!--Change text to green when positive return-->
                                    <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                                </DataTrigger>

                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.DayReturn}" Value="0">
                                    <!--Change text to grey when no return-->
                                    <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>

                        <Label Text="{Binding OwnedStock.DayReturnRate, StringFormat='({0:F}%)'}" FontSize="Small" Grid.Column="2" Grid.Row="0" VerticalOptions="Center" TextColor="{DynamicResource NegativeTextColor}">
                            <Label.Triggers>
                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.PositiveDayReturns}" Value="True">
                                    <!--Change text to green when positive return-->
                                    <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                                </DataTrigger>

                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.DayReturn}" Value="0">
                                    <!--Change text to grey when no return-->
                                    <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>

                        <Label Text="Total Return:" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Medium" HorizontalTextAlignment="End" VerticalTextAlignment="End" Grid.Column="0" Grid.Row="1"/>

                        <Label Text="{Binding OwnedStock.TotalReturn, StringFormat='{0:C}'}" FontSize="Small" Grid.Column="1" Grid.Row="1" VerticalOptions="Center" TextColor="{DynamicResource NegativeTextColor}">
                            <Label.Triggers>
                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.PositiveTotal}" Value="True">
                                    <!--Change text to green when positive return-->
                                    <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                                </DataTrigger>

                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.TotalReturn}" Value="0">
                                    <!--Change text to grey when no return-->
                                    <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>

                        <Label Text="{Binding OwnedStock.TotalReturnRate, StringFormat='({0:F}%)'}" FontSize="Small" Grid.Column="2" Grid.Row="1" VerticalOptions="Center" TextColor="{DynamicResource NegativeTextColor}">
                            <Label.Triggers>
                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.PositiveTotal}" Value="True">
                                    <!--Change text to green when positive return-->
                                    <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                                </DataTrigger>

                                <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.TotalReturn}" Value="0">
                                    <!--Change text to grey when no return-->
                                    <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                    </Grid>
                </StackLayout>
            </Frame>

            <Label Text="Return Goal" TextColor="{DynamicResource PrimaryTextColor}" HorizontalOptions="Center" FontSize="Medium" />
                
            <Frame Margin="20,0,20,20" BackgroundColor="{DynamicResource SurfaceColor}" CornerRadius="16">
                <StackLayout>
                    <!--Grid in order to stack progress label on top of progress bar -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <progressBar:SfLinearProgressBar Grid.Row="0" Grid.Column="0" TrackHeight="25" HeightRequest="25"  Minimum="0" Progress="{Binding OwnedStock.TotalReturn}"
                                                         Maximum="{Binding OwnedStock.ReturnGoal}" Margin="30,0" CornerRadius="32" />
                        <Label Grid.Row="0" Grid.Column="0" Text="{Binding OwnedStock.ReturnGoalProgress, StringFormat='{0:F}%'}" FontSize="Medium" HorizontalTextAlignment="Center" TextColor="Black"/>
                    </Grid>
                     
                    <!--Grid that adds the minimum value and maximum value labels to the progress bar-->
                    <Grid Margin="30,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Text="$0" FontSize="Medium" TextColor="{DynamicResource PrimaryTextColor}" HorizontalTextAlignment="Start"/>
                        <Label Grid.Row="0" Grid.Column="1" Text="{Binding OwnedStock.ReturnGoal, StringFormat='{0:C0}'}" FontSize="Medium" TextColor="{DynamicResource PrimaryTextColor}" HorizontalTextAlignment="End"/>
                    </Grid>
                </StackLayout>
            </Frame>

            <!--Buttons below details of OwnedAsset-->
            <Grid Margin="20" ColumnSpacing="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*" />
                    <ColumnDefinition Width="50*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                </Grid.RowDefinitions>

                <Button Text="Remove" Grid.Column="0" VerticalOptions="CenterAndExpand" HorizontalOptions="FillAndExpand" BackgroundColor="{DynamicResource SurfaceColor}" 
                        TextColor="{DynamicResource ErrorColor}" CornerRadius="16" Clicked="RemoveStockClicked" FontAttributes="Bold" />
                <Button Text="Edit" Grid.Column="1" VerticalOptions="CenterAndExpand" HorizontalOptions="FillAndExpand" BackgroundColor="{DynamicResource SurfaceColor}"
                        TextColor="{DynamicResource AcceptColor}" CornerRadius="16" Clicked="EditStockClicked" FontAttributes="Bold" />
            </Grid>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>