<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodels="clr-namespace:WealthMate.ViewModels;assembly=WealthMate"
             xmlns:syncfusion="clr-namespace:Syncfusion.ListView.XForms;assembly=Syncfusion.SfListView.XForms"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.Markets.WatchlistPage"
             Title="Watchlist">

    <ContentPage.BindingContext>
        <viewmodels:WatchListViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Content>
        <StackLayout>
            <Grid ColumnSpacing="10" BackgroundColor="{DynamicResource SurfaceColor}" Margin="12,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="7*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--Searchbar, placeholder text and on text change functionality-->
                <SearchBar x:Name="SearchBar" Grid.Column="0" HorizontalOptions="Start" Placeholder="Search Watchlist" TextChanged="OnFilterTextChanged"/>

                <!--Picker for selecting attribute to sort list by-->
                <Picker Title="Sort" x:Name="picker" Grid.Column="1" HorizontalOptions="FillAndExpand" TextColor="{DynamicResource PrimaryTextColor}" SelectedItem="{Binding SelectedCriteria}">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Company Name</x:String>
                            <x:String>Day Return Rate</x:String>
                            <x:String>Current Price (high-low)</x:String>
                            <x:String>Current Price (low-high)</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
            </Grid>

            <!-- SfListView instead of xamarin forms listview for built in reordering, sorting and filtering -->
            <syncfusion:SfListView x:Name="Watchlist" ItemsSource="{Binding WatchListStocks}" AutoFitMode="None" ItemSize="52" DragStartMode="OnHold"
                                   ItemTapped="WatchlistView_ItemTapped">
                <syncfusion:SfListView.ItemTemplate>
                    <DataTemplate>
                        <Grid x:Name="WatchListItem" RowSpacing="0" ColumnSpacing="10" BackgroundColor="{DynamicResource SurfaceColor}" Padding="12,0">
                            <Grid.ColumnDefinitions>
                                <!-- Company image size -->
                                <ColumnDefinition Width="32" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Stock company logo -->
                            <Image Grid.Column="0" Grid.RowSpan="2" Source="{Binding Symbol}" />

                            <!-- stock company name -->
                            <Label Grid.Column="1" Grid.Row="0" Text="{Binding CompanyName}" TextColor="{DynamicResource PrimaryTextColor}"
                                   VerticalOptions="End" FontSize="20" LineBreakMode="TailTruncation" />

                            <!-- Stock symbol -->
                            <Label Grid.Column="1" Grid.Row="1" Text="{Binding Symbol}" TextColor="{DynamicResource PrimaryTextColor}" VerticalOptions="Start" FontSize="12" />

                            <Frame Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" BackgroundColor="{DynamicResource PositiveBackgroundColor}" Padding="4" VerticalOptions="Center" HorizontalOptions="End" WidthRequest="64" CornerRadius="8">
                                <Frame.Triggers>
                                    <DataTrigger TargetType ="Frame" Binding="{Binding PositiveDayReturns}" Value="False">
                                        <!--Change text to red when negative return-->
                                        <Setter Property="BackgroundColor" Value="{DynamicResource NegativeBackgroundColor}" />
                                    </DataTrigger>

                                    <DataTrigger TargetType ="Frame" Binding="{Binding NoDayReturns}" Value="True">
                                        <!--Change background to grey when no return-->
                                        <Setter Property="BackgroundColor" Value="{DynamicResource NeutralBackgroundColor}" />
                                    </DataTrigger>
                                </Frame.Triggers>

                                <!-- Stock current price -->
                                <Label Text="{Binding CurrentPrice, StringFormat='{0:C}'}" TextColor="{DynamicResource PositiveTextColor}" VerticalOptions="Center" HorizontalOptions="Center" FontSize="16">
                                    <Label.Triggers>
                                        <DataTrigger TargetType ="Label" Binding="{Binding PositiveDayReturns}" Value="False">
                                            <!--Change text to red when negative return-->
                                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType ="Label" Binding="{Binding NoDayReturns}" Value="True">
                                            <!--Change text to grey when no return-->
                                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </Frame>
                        </Grid>
                    </DataTemplate>
                </syncfusion:SfListView.ItemTemplate>
            </syncfusion:SfListView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>