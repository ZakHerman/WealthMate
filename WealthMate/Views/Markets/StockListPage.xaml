<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:syncfusion="clr-namespace:Syncfusion.ListView.XForms;assembly=Syncfusion.SfListView.XForms"
             xmlns:comboBox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms"
             xmlns:generic="clr-namespace:System.Collections.Generic;assembly=netstandard"
             xmlns:controls="clr-namespace:WealthMate.Renderers.Controls;assembly=WealthMate"
             xmlns:valueConverter="clr-namespace:WealthMate.ViewModels.ValueConverter;assembly=WealthMate"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.Markets.StockListPage"
             Title="Stocks"
             BackgroundColor="{DynamicResource BackgroundColor}">

    <ContentPage.Resources>
        <ResourceDictionary>
            <valueConverter:CompanyLogoNameConverter x:Key="ConvertToResourceName" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <StackLayout>
            <Grid ColumnSpacing="10" Margin="8,12,8,6" HeightRequest="65">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="65*" />
                    <ColumnDefinition Width="35*" />
                </Grid.ColumnDefinitions>

                <!--Picker for selecting attribute to sort list by-->
                <Frame Grid.Column="1" BackgroundColor="{DynamicResource SurfaceColor}" Padding="2,0" CornerRadius="8">
                    <comboBox:SfComboBox TextColor="{DynamicResource DisabledTextColor}" Text="Sort" DropDownBackgroundColor="{DynamicResource TransparentColor}" SelectedDropDownItemColor="{DynamicResource DropdownSelectedColor}"
                                         BackgroundColor="{DynamicResource TransparentColor}" ClearButtonColor="{DynamicResource TransparentColor}" BorderColor="{DynamicResource TransparentColor}"
                                         DropDownBorderColor="{DynamicResource DropdownUnselectedColor}" DropDownTextColor="{DynamicResource PrimaryTextColor}" SelectionChanged="SfComboBox_OnSelectionChanged">
                        <comboBox:SfComboBox.ComboBoxSource>
                            <generic:List x:TypeArguments="x:String">
                                <x:String>Name ↑</x:String>
                                <x:String>Name ↓</x:String>
                                <x:String>Return Rate ↑</x:String>
                                <x:String>Return Rate ↓</x:String>
                                <x:String>Price ↑</x:String>
                                <x:String>Price ↓</x:String>
                            </generic:List>
                        </comboBox:SfComboBox.ComboBoxSource>
                    </comboBox:SfComboBox>
                </Frame>

                <!--Searchbar, placeholder text and on text change functionality-->
                <Frame Grid.Column="0" BackgroundColor="{DynamicResource SurfaceColor}" Padding="2,0" CornerRadius="8">
                    <controls:CustomSearchBar x:Name="SearchBar" Placeholder="Search Stocks" TextChanged="OnFilterTextChanged" TextColor="{DynamicResource PrimaryTextColor}"
                               PlaceholderColor="{DynamicResource DisabledTextColor}" CancelButtonColor="{DynamicResource ErrorColor}" />
                </Frame>
            </Grid>

            <syncfusion:SfListView x:Name="StockListView" ItemsSource="{Binding StockList}" SelectionBackgroundColor="{DynamicResource SurfaceSelectedColor}" ItemSize="52" DragStartMode="OnHold"
                                   ItemTapped="StockListView_ItemTapped">
                <syncfusion:SfListView.ItemTemplate>
                    <DataTemplate>
                        <Grid BackgroundColor="{DynamicResource SurfaceColor}" RowSpacing="0" ColumnSpacing="10" Padding="12,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="6*" />
                                <RowDefinition Height="4*" />
                            </Grid.RowDefinitions>

                            <Image Grid.Column="0" Grid.RowSpan="2" Source="{Binding CompanyName, Converter={StaticResource ConvertToResourceName}}" />
                            <Label Grid.Column="1" Grid.Row="0" Text="{Binding CompanyName}" TextColor="{DynamicResource PrimaryTextColor}" VerticalOptions="End" FontSize="20" LineBreakMode="TailTruncation" />
                            <Label Grid.Column="1" Grid.Row="1" Text="{Binding Symbol}" TextColor="{DynamicResource SecondaryTextColor}" VerticalOptions="Start" FontSize="12" />

                            <Frame Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" BackgroundColor="{DynamicResource PositiveBackgroundColor}" Padding="4" VerticalOptions="Center"
                                   HorizontalOptions="End" WidthRequest="64" CornerRadius="8">
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame" Binding="{Binding PositiveDayReturns}" Value="False">
                                        <!--Change background to red when negative return-->
                                        <Setter Property="BackgroundColor" Value="{DynamicResource NegativeBackgroundColor}" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="Frame" Binding="{Binding NoDayReturns}" Value="True">
                                        <!--Change background to grey when no return-->
                                        <Setter Property="BackgroundColor" Value="{DynamicResource NeutralBackgroundColor}" />
                                    </DataTrigger>
                                </Frame.Triggers>
                                
                                <Label Text="{Binding CurrentPrice, StringFormat='{0:C}'}" TextColor="{DynamicResource PositiveTextColor}" VerticalOptions="Center" HorizontalOptions="Center" FontSize="16">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding PositiveDayReturns}" Value="False">
                                            <!--Change text to red when negative return-->
                                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Label" Binding="{Binding NoDayReturns}" Value="True">
                                            <!--Change text to grey when no return-->
                                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </Frame>
                        </Grid>
                    </DataTemplate>
                </syncfusion:SfListView.ItemTemplate>
            </syncfusion:SfListView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>