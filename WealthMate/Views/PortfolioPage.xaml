<?xml version="1.0" encoding="utf-8" ?>
<TabbedPage xmlns="http://xamarin.com/schemas/2014/forms"
xmlns:chart="clr-namespace:Syncfusion.SfChart.XForms;assembly=Syncfusion.SfChart.XForms"
            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:d="http://xamarin.com/schemas/2014/forms/design"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:syncfusion="clr-namespace:Syncfusion.ListView.XForms;assembly=Syncfusion.SfListView.XForms"
            xmlns:viewmodels="clr-namespace:WealthMate.ViewModels"
            mc:Ignorable="d"
            x:Class="WealthMate.Views.PortfolioPage"
            Title="Portfolio">

    <TabbedPage.BindingContext>
        <viewmodels:PortfolioPageVM/>
    </TabbedPage.BindingContext>

    <NavigationPage.TitleView>
        <AbsoluteLayout x:Name="NavBarLayout">
            <Image x:Name="NavBarLogo" Source="logo.png" HeightRequest="64" WidthRequest="64" />
            <Label x:Name="NavBarTitle" Text="{Binding CurrentPortfolio.CurrentTotal, StringFormat='{0:C}', Mode=OneWay}" HorizontalTextAlignment="Center"
                   VerticalTextAlignment="Center" FontAttributes="Bold" TextColor="{DynamicResource SecondaryTextColor}" FontSize="20"/>
        </AbsoluteLayout>
    </NavigationPage.TitleView>

    <!--Tabbed Pages:-->
    <TabbedPage.Children>
      <!--Portfolio PieChart Tab:-->
        <ContentPage Title="PieChart">
            <StackLayout>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Label Text="{Binding CurrentPortfolio.TotalReturn, StringFormat='{0:C}'}" TextColor="{DynamicResource PositiveTextColor}"
                           Grid.Column="0" Grid.Row="0" HorizontalOptions="End" FontSize="Large">
                        <Label.Triggers>
                            <DataTrigger TargetType ="Label" Binding="{Binding CurrentPortfolio.PositiveTotal}" Value="False">
                                <!--Default text colour is green, change text to red when total returns are negative-->
                                <Setter Property="TextColor" Value="{DynamicResource NegativeTextColor}" />
                            </DataTrigger>

                            <DataTrigger TargetType ="Label" Binding="{Binding CurrentPortfolio.TotalReturn}" Value="0">
                                <!--Default text colour is green, change text to red when total returns are negative-->
                                <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Label Text="{Binding CurrentPortfolio.TotalReturnRate, StringFormat='{0:F}%'}" TextColor="{DynamicResource PositiveTextColor}"
                           Grid.Column="1" Grid.Row="0" HorizontalOptions="Start" FontSize="Large">
                        <Label.Triggers>
                            <DataTrigger TargetType ="Label" Binding="{Binding CurrentPortfolio.PositiveTotal}" Value="False">
                                <!--Default text colour is green, change text to red when total returns are negative-->
                                <Setter Property="TextColor" Value="{DynamicResource NegativeTextColor}" />
                            </DataTrigger>

                            <DataTrigger TargetType ="Label" Binding="{Binding CurrentPortfolio.TotalReturn}" Value="0">
                                <!--Default text colour is green, change text to red when total returns are negative-->
                                <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <!--Picker-->
                    <Picker Title="Chart Picker" x:Name="PieChartChanger" HorizontalOptions="End" Grid.Column="1" Grid.Row="0" FontSize="Medium" SelectedItem="{Binding MySelectedItem}" SelectedIndexChanged="PieChartChanger_SelectedIndexChanged">
                        <Picker.Items>
                            <x:String>All Assets</x:String>
                            <x:String>Term Deposits</x:String>
                            <x:String>Stocks</x:String>
                        </Picker.Items>
                    </Picker>
                    
                </Grid>
                
                <chart:SfChart VerticalOptions="FillAndExpand">
                    <chart:SfChart.Series>
                        <chart:PieSeries EnableAnimation="True" ItemsSource="{Binding pieChart}" XBindingPath="AssetType" YBindingPath="Quantity" EnableTooltip="True" ExplodeOnTouch="True">
                            <chart:PieSeries.ColorModel>
                                <chart:ChartColorModel Palette="Natural" />
                            </chart:PieSeries.ColorModel>
                        </chart:PieSeries>
                    </chart:SfChart.Series>

                    <!--The pie chart legends of categories and returns-->
                    <chart:SfChart.Legend>
                        <chart:ChartLegend x:Name="Legend" DockPosition="Bottom" OverflowMode="Scroll" Orientation="Vertical">
                            <chart:ChartLegend.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="12,0,12,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="24" />
                                            <ColumnDefinition Width="130" />
                                            <ColumnDefinition Width="90" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>

                                        <BoxView Grid.Column="0" Color="{Binding IconColor}" HorizontalOptions="Center" VerticalOptions="Center" HeightRequest="13" WidthRequest="13" />

                                        <Label Grid.Column="1" Text="{Binding DataPoint.AssetType}" TextColor="{DynamicResource PrimaryTextColor}"
                                               FontSize="13" VerticalTextAlignment="Center" HorizontalOptions="Start" />

                                        <Label Grid.Column="2" Text="{Binding DataPoint.Quantity, StringFormat='${0:F2}'}" TextColor="{DynamicResource PrimaryTextColor}"
                                               FontSize="13" VerticalTextAlignment="Center" HorizontalTextAlignment="End" />
                                        
                                        <Label Grid.Column="3" Text="{Binding DataPoint.ReturnPercentage, StringFormat='{0:F2}%'}" TextColor="{DynamicResource PositiveTextColor}"
                                               VerticalOptions="Start" HorizontalTextAlignment="End" FontSize="13" LineBreakMode="TailTruncation">
                                            <Label.Triggers>
                                                <!--Changes text to red when the Return Percentage is negative-->
                                                <DataTrigger TargetType ="Label" Binding="{Binding DataPoint.IsPositive}" Value="False">
                                                    <Setter Property="TextColor" Value="{DynamicResource NegativeTextColor}" />
                                                </DataTrigger>

                                                <!--Changes text to grey when the Return Percentage hasn't changed-->
                                                <DataTrigger TargetType ="Label" Binding="{Binding DataPoint.ReturnPercentage}" Value="0">
                                                    <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                                                </DataTrigger>
                                            </Label.Triggers>
                                        </Label>
                                    </Grid>
                                </DataTemplate>
                            </chart:ChartLegend.ItemTemplate>
                        </chart:ChartLegend>
                    </chart:SfChart.Legend>
                </chart:SfChart>
            </StackLayout>
        </ContentPage>

        <!--Portfolio Asset List view Tab:-->
        <ContentPage Title="List">
            <StackLayout>
                <!--Searchbar, placeholder text and on text change functionality-->
                <SearchBar x:Name="SearchBar" Placeholder ="Search Portfolio" TextChanged="OnFilterTextChanged" />

                <ScrollView>
                    <syncfusion:SfListView x:Name="List" AutoFitMode="None" ItemsSource="{Binding OwnedAssets}" DragStartMode="OnHold" ItemSize="52" ItemTapped="PortfolioListView_ItemTapped">
                        <syncfusion:SfListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="12,0,12,0" RowSpacing="0" ColumnSpacing="10">
                                    <Grid.ColumnDefinitions>
                                        <!--4 columns per asset-->
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="52" />
                                        <ColumnDefinition Width="46" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <!--2 rows per asset-->
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Label Grid.Column="0" Grid.Row="0" Text="{Binding Type}" TextColor="{DynamicResource PrimaryTextColor}"
                                           VerticalOptions="Start" FontSize="20" LineBreakMode="TailTruncation" />

                                    <Label Grid.Column="1" Grid.Row="0" Text="{Binding stock.Symbol}" TextColor="{DynamicResource PrimaryTextColor}"
                                           VerticalOptions="Start" FontSize="20" LineBreakMode="TailTruncation" />

                                    <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Text="{Binding AssetName}" TextColor="{DynamicResource PrimaryTextColor}"
                                           VerticalOptions="Start" FontSize="12" LineBreakMode="TailTruncation" />

                                    <Label Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="0" Text="{Binding CurrentValue, StringFormat='{0:C2}'}" TextColor="{DynamicResource PrimaryTextColor}"
                                           VerticalOptions="Start" HorizontalTextAlignment="Center" FontSize="20" LineBreakMode="TailTruncation" />
                                    
                                    <Label Grid.Column="2" Grid.Row="1" Text="{Binding TotalReturn, StringFormat='{0:C2}'}" VerticalOptions="Start"
                                           HorizontalTextAlignment="Center" FontSize="12" TextColor="{DynamicResource PositiveTextColor}" LineBreakMode="TailTruncation" >
                                        <Label.Triggers>
                                            <DataTrigger TargetType="Label" Binding="{Binding PositiveTotal}" Value="False">
                                                <!--Default text colour is green, change text to red when total returns are negative-->
                                                <Setter Property="TextColor" Value="{DynamicResource NegativeTextColor}" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                  
                                    <Label Grid.Column="3" Grid.Row="1" Text="{Binding TotalReturnRate, StringFormat='{0:F2}%'}" VerticalOptions="Start"
                                           HorizontalTextAlignment="Center" FontSize="12" TextColor="{DynamicResource PositiveTextColor}" LineBreakMode="TailTruncation" >
                                        <Label.Triggers>
                                            <DataTrigger TargetType="Label" Binding="{Binding PositiveTotal}" Value="False">
                                                <!--Default text colour is green, change text to red when total returns are negative-->
                                                <Setter Property="TextColor" Value="{DynamicResource NegativeTextColor}" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                </Grid>
                            </DataTemplate>
                        </syncfusion:SfListView.ItemTemplate>
                    </syncfusion:SfListView>
                </ScrollView>
            </StackLayout>
        </ContentPage>
    </TabbedPage.Children>
</TabbedPage>


