<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sfPopup="clr-namespace:Syncfusion.XForms.PopupLayout;assembly=Syncfusion.SfPopupLayout.XForms"
             xmlns:textbox="clr-namespace:Syncfusion.SfNumericTextBox.XForms;assembly=Syncfusion.SfNumericTextBox.XForms"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.OwnedStockDetailsPage">

    <NavigationPage.TitleView>
        <!--Displays name and that it's a stock, as well as it's bought price in the nav bar-->
        <AbsoluteLayout x:Name="NavBarLayout">
            <Label Text="{Binding OwnedStock.AssetNameTypePurchasedPrice}" TextColor="{DynamicResource SecondaryTextColor}"
                   HorizontalTextAlignment="Center" VerticalTextAlignment="Center" FontAttributes="Bold" FontSize="20"/>
        </AbsoluteLayout>
    </NavigationPage.TitleView>

    <ContentPage.Content>
        <StackLayout Margin="0, 10">
            <!--Displays basic details of the OwnedStock-->
            <Label Text="{Binding OwnedStock.PurchaseDate, StringFormat='Date Purchased: {0:dd/MM/yy}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

            <Label Text="{Binding OwnedStock.SharesPurchased, StringFormat='Shares Purchased: {0:F}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

            <Label Text="{Binding OwnedStock.PurchasedPrice, StringFormat='Purchased Price: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

            <Label Text="{Binding OwnedStock.PrincipalValue, StringFormat='Purchased Value: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="0,0,0,10"/>

            <Label Text="{Binding OwnedStock.CurrentPrice, StringFormat='Current Price: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>

            <Label Text="{Binding OwnedStock.CurrentValue, StringFormat='Current Value: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                   FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="0,0,0,10"/>

            <Grid HorizontalOptions="Center" VerticalOptions="Center">
                <!--Grid to display day returns $ value and % in one line-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Label Text="Day Return:" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Medium" HorizontalTextAlignment="End" VerticalTextAlignment="End" Grid.Column="0" Grid.Row="0"/>

                <Label Text="{Binding OwnedStock.DayReturn, StringFormat='{0:C}'}" FontSize="Medium" Grid.Column="1" Grid.Row="0" TextColor="{DynamicResource NegativeTextColor}">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.PositiveDayReturns}" Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                        </DataTrigger>

                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.DayReturn}" Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <Label Text="{Binding OwnedStock.DayReturnRate, StringFormat='({0:F}%)'}" FontSize="Medium" Grid.Column="2" Grid.Row="0" TextColor="{DynamicResource NegativeTextColor}">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.PositiveDayReturns}" Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                        </DataTrigger>

                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.DayReturn}" Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <Label Text="Total Return:" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Medium" HorizontalTextAlignment="End" VerticalTextAlignment="End" Grid.Column="0" Grid.Row="1"/>

                <Label Text="{Binding OwnedStock.TotalReturn, StringFormat='{0:C}'}" FontSize="Medium" Grid.Column="1" Grid.Row="1" TextColor="{DynamicResource NegativeTextColor}">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding Stock.PositiveTotal}" Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                        </DataTrigger>

                        <DataTrigger TargetType ="Label" Binding="{Binding Stock.TotalReturn}" Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <Label Text="{Binding OwnedStock.TotalReturnRate, StringFormat='({0:F}%)'}" FontSize="Medium" Grid.Column="2" Grid.Row="1" TextColor="{DynamicResource NegativeTextColor}">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding Stock.PositiveTotal}" Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                        </DataTrigger>

                        <DataTrigger TargetType ="Label" Binding="{Binding Stock.TotalReturn}" Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </Grid>

            <!--Buttons below OwnedStock details-->
            <Button Text="View Stock Details" VerticalOptions="Center" HorizontalOptions="Center" Margin="0,20,0,0"/>
            <!--Will open public view of stock-->
            <Button Text="Edit Owned Stock" VerticalOptions="Center" HorizontalOptions="Center" Clicked="EditStockClicked"/>
            <Button Text="Remove Owned Stock" VerticalOptions="Center" HorizontalOptions="Center"/>

            <!--Edit Stock Popup Box-->
            <sfPopup:SfPopupLayout x:Name="popupLayout" IsOpen="false" >
                <sfPopup:SfPopupLayout.PopupView>
                    <sfPopup:PopupView HeaderTitle="Edit Owned Stock Details" ShowFooter="false">
                        <sfPopup:PopupView.ContentTemplate>
                            <DataTemplate>
                                <StackLayout WidthRequest="300" HeightRequest="300">
                                    <Label Text="Edit number of shares:" TextColor="{DynamicResource PrimaryTextColor}" Margin="1" HorizontalTextAlignment="Start" FontSize="12" />
                                    <textbox:SfNumericTextBox x:Name="editNumOfShares" Margin="3,3" ValueChangeMode="OnLostFocus" ParserMode="Decimal"/>

                                    <Label Text="Edit purchase price:" TextColor="{DynamicResource PrimaryTextColor}" Margin="1,3" HorizontalTextAlignment="Start" FontSize="12" />
                                    <textbox:SfNumericTextBox x:Name="editPurchasePrice" Margin="3,3" ValueChangeMode="OnLostFocus" ParserMode="Decimal"/>

                                    <Button Text="Save" VerticalOptions="End" HorizontalOptions="Center" FontSize="14" TextColor="DarkGreen" BackgroundColor="LightGreen" Clicked="SaveInPopupClicked"/>
                                </StackLayout>
                            </DataTemplate>
                        </sfPopup:PopupView.ContentTemplate>
                    </sfPopup:PopupView>
                </sfPopup:SfPopupLayout.PopupView>
            </sfPopup:SfPopupLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>