<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.OwnedStockDetailsPage">

    <NavigationPage.TitleView> <!--Displays name and that it's a stock, as well as it's bought price in the nav bar-->
        <AbsoluteLayout x:Name="NavBarLayout">
            <Label Text="{Binding OwnedStock.AssetNameTypePurchasedPrice}" HorizontalTextAlignment="Center"
                   VerticalTextAlignment="Center" FontAttributes="Bold" TextColor="White" FontSize="20"/>
        </AbsoluteLayout>
    </NavigationPage.TitleView>

    <ContentPage.Content>
        <StackLayout Margin="0, 10"> <!--Displays basic details of the OwnedStock-->
            <Label Text="{Binding OwnedStock.PurchaseDate, StringFormat='Date Purchased: {0:dd/MM/yy}'}" FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
            <Label Text="{Binding OwnedStock.SharesPurchased, StringFormat='Shares Purchased: {0:F}'}" FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
            <Label Text="{Binding OwnedStock.PurchasedPrice, StringFormat='Purchased Price: {0:C}'}" FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
            <Label Text="{Binding OwnedStock.PrincipalValue, StringFormat='Purchased Value: {0:C}'}" FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="0, 0, 0, 10"/>
            <Label Text="{Binding OwnedStock.CurrentPrice, StringFormat='Current Price: {0:C}'}" FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
            <Label Text="{Binding OwnedStock.CurrentValue, StringFormat='Current Value: {0:C}'}" FontSize="Medium" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="0, 0, 0, 10"/>

            <Grid HorizontalOptions="Center" VerticalOptions="Center">  <!--Grid to display day returns $ value and % in one line-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Label Text="Day Return:" FontSize="Medium" HorizontalTextAlignment="End" VerticalTextAlignment="End" Grid.Column="0" Grid.Row="0"/>
                <Label Text="{Binding OwnedStock.DayReturn, StringFormat='{0:C}'}" FontSize="Medium" Grid.Column="1" Grid.Row="0" TextColor="Red">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.PositiveDayReturns}"  Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="Color.ForestGreen" />
                        </DataTrigger>
                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.DayReturn}"  Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="Color.Gray" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Label Text="{Binding OwnedStock.DayReturnRate, StringFormat='({0:F}%)'}" FontSize="Medium" Grid.Column="2" Grid.Row="0" TextColor="Red">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.PositiveDayReturns}"  Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="Color.ForestGreen" />
                        </DataTrigger>
                        <DataTrigger TargetType ="Label" Binding="{Binding OwnedStock.DayReturn}"  Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="Color.Gray" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <Label Text="Total Return:" FontSize="Medium" HorizontalTextAlignment="End" VerticalTextAlignment="End" Grid.Column="0" Grid.Row="1"/>
                <Label Text="{Binding OwnedStock.TotalReturn, StringFormat='{0:C}'}" FontSize="Medium" Grid.Column="1" Grid.Row="1" TextColor="Red">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding Stock.PositiveTotal}"  Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="Color.ForestGreen" />
                        </DataTrigger>
                        <DataTrigger TargetType ="Label" Binding="{Binding Stock.TotalReturn}"  Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="Color.Gray" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Label Text="{Binding OwnedStock.TotalReturnRate, StringFormat='({0:F}%)'}" FontSize="Medium" Grid.Column="2" Grid.Row="1" TextColor="Red">
                    <Label.Triggers>
                        <DataTrigger TargetType ="Label" Binding="{Binding Stock.PositiveTotal}"  Value="True">
                            <!--Change text to green when positive return-->
                            <Setter Property="TextColor" Value="Color.ForestGreen" />
                        </DataTrigger>
                        <DataTrigger TargetType ="Label" Binding="{Binding Stock.TotalReturn}"  Value="0">
                            <!--Change text to grey when no return-->
                            <Setter Property="TextColor" Value="Color.Gray" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </Grid>

            <!--Buttons below OwnedStock details-->
            <Button Text="View Stock Details" VerticalOptions="Center" HorizontalOptions="Center" Margin="0, 20, 0, 0"/> <!--Will open public view of stock-->
            <Button Text="Edit Owned Stock" VerticalOptions="Center" HorizontalOptions="Center"/>
            <Button Text="Remove Owned Stock" VerticalOptions="Center" HorizontalOptions="Center"/>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>