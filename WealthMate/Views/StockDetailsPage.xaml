<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:chart="clr-namespace:Syncfusion.SfChart.XForms;assembly=Syncfusion.SfChart.XForms"
             xmlns:sfPopup="clr-namespace:Syncfusion.XForms.PopupLayout;assembly=Syncfusion.SfPopupLayout.XForms"
             xmlns:textbox="clr-namespace:Syncfusion.SfNumericTextBox.XForms;assembly=Syncfusion.SfNumericTextBox.XForms"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.StockDetailsPage">

    <NavigationPage.TitleView>
        <Grid>
            <!--Watchlist star height-->
            <Grid.RowDefinitions>
                <RowDefinition Height="26"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" /> <!--Stock name width-->
                <ColumnDefinition Width="37" /> <!--Watchlist star width-->
            </Grid.ColumnDefinitions>

            <!--Name of stock being displayed-->
            <Label x:Name="NavBarTitle" Text="{Binding Stock.CompanyName}" TextColor="{DynamicResource SecondaryTextColor}" HorizontalTextAlignment="Start"
                   VerticalTextAlignment="Start" FontAttributes="Bold" FontSize="20" Grid.Column="0" Grid.Row="0" />

            <!--Watchlist star image details-->
            <ImageButton Source="starunfilled.png" BackgroundColor="{DynamicResource TransparentColor}" Grid.Row="0" Grid.Column="1" Margin="0,0,15,0" Clicked="WatchListStarClicked">
                <ImageButton.Triggers>
                    <!--Change to filled arrow when stock is being watched-->
                    <DataTrigger TargetType="ImageButton" Binding="{Binding Watched}" Value="True">
                        <Setter Property="Source" Value="starfilled.png" /> 
                    </DataTrigger>
                </ImageButton.Triggers>
            </ImageButton>
        </Grid>
    </NavigationPage.TitleView>

    <ContentPage.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="TrackballTemplate">
                <Grid RowSpacing="0" Padding="5,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Label Text="{Binding Date, StringFormat='{0:dd/MM/yyyy}'}" Grid.Row="0" FontSize="12" FontAttributes="Bold" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />
                    <Label Text="{Binding PriceOpen, StringFormat='Open: {0:C}'}" Grid.Row="1" FontSize="12" VerticalTextAlignment="Center" />
                    <Label Text="{Binding PriceClose, StringFormat='Close: {0:C}'}" Grid.Row="2" FontSize="12" VerticalTextAlignment="Center" />
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <ScrollView BackgroundColor="{DynamicResource PageBackgroundColor}">
            <StackLayout Spacing="10" Padding="5" Orientation = "Vertical">
                <Label x:Name="SymbolText" Text="{Binding Stock.Symbol}" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Large" VerticalOptions="Start" HorizontalOptions="CenterAndExpand" />

                <!--Stock history price graph-->
                <chart:SfChart VerticalOptions="FillAndExpand" BackgroundColor="{DynamicResource PageBackgroundColor}">
                    <!--X axis representing the date of stock history-->
                    <chart:SfChart.PrimaryAxis>
                        <chart:DateTimeAxis />
                    </chart:SfChart.PrimaryAxis>
     
                    <!--Y axis representing the closing price of stock history-->
                    <chart:SfChart.SecondaryAxis>
                        <chart:NumericalAxis/>
                    </chart:SfChart.SecondaryAxis>

                    <chart:SfChart.ChartBehaviors>
                        <!--Limit zoom to X axis-->
                        <chart:ChartZoomPanBehavior ZoomMode="X"/>
                        
                        <chart:ChartTrackballBehavior>
                            <chart:ChartTrackballBehavior.LabelStyle>
                                <chart:ChartTrackballLabelStyle BorderColor="#0061A2" BackgroundColor="#d1F9F9F9" BorderThickness="2"/>
                            </chart:ChartTrackballBehavior.LabelStyle>

                            <chart:ChartTrackballBehavior.MarkerStyle>
                                <chart:ChartTrackballMarkerStyle Color="Black"/>
                            </chart:ChartTrackballBehavior.MarkerStyle>
                        </chart:ChartTrackballBehavior>
                    </chart:SfChart.ChartBehaviors>

                    <chart:LineSeries x:Name="StockHistoryGraph" TrackballLabelTemplate="{StaticResource TrackballTemplate}" XBindingPath="Date" YBindingPath="PriceClose"/>
                </chart:SfChart>

                <!--Labels underneath graph-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26" /> <!--Image size of price arrow-->
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" /> <!--Price column-->
                        <ColumnDefinition Width="auto" /> <!--Arrow column-->
                        <ColumnDefinition Width="auto" /> <!--Return column-->
                        <ColumnDefinition Width="auto" /> <!--Return rate column-->
                    </Grid.ColumnDefinitions>

                    <Label x:Name ="CurrentPriceText" Text="{Binding Stock.CurrentPrice, StringFormat='{0:C}'}" TextColor="{DynamicResource PrimaryTextColor}"
                           FontSize="Large" Margin="10,0,0,0" Grid.Row="0" Grid.Column="0" />

                    <Image Source="downarrow.png" Grid.Row="0" Grid.Column="1" Margin="0,5,0,0">
                        <Image.Triggers>
                            <!--Change to upward arrow when positive return-->
                            <DataTrigger TargetType ="Image" Binding="{Binding Stock.PositiveDayReturns}" Value="True">
                                <Setter Property="Source" Value="uparrow.png" />
                            </DataTrigger>

                            <!--Change to horizontal bar when no change for return-->
                            <DataTrigger TargetType="Image" Binding="{Binding Stock.DayReturn}" Value="0">
                                <Setter Property="Source" Value="horizontalline.png" />
                            </DataTrigger>
                        </Image.Triggers>
                    </Image>

                    <Label x:Name="DayReturnText" Text="{Binding Stock.DayReturn, StringFormat='{0:C}'}" TextColor="{DynamicResource NegativeTextColor}"
                           FontSize="Large" Grid.Row="0" Grid.Column="2">
                        <Label.Triggers>
                            <!--Change text to green when positive return-->
                            <DataTrigger TargetType ="Label" Binding="{Binding Stock.PositiveDayReturns}" Value="True">
                                <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                            </DataTrigger>

                            <!--Change text to grey when no change for return-->
                            <DataTrigger TargetType ="Label" Binding="{Binding Stock.DayReturn}" Value="0">
                                <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Label x:Name="DayReturnRateText" Text="{Binding Stock.DayReturnRate, StringFormat='{0:N}%'}" TextColor="{DynamicResource NegativeTextColor}"
                           FontSize="Large" Grid.Row="0" Grid.Column="3">
                        <Label.Triggers>
                            <!--Change text to green when positive return-->
                            <DataTrigger TargetType ="Label" Binding="{Binding Stock.PositiveDayReturns}" Value="True">
                                <Setter Property="TextColor" Value="{DynamicResource PositiveTextColor}" />
                            </DataTrigger>

                            <!--Change text to grey when no change for return-->
                            <DataTrigger TargetType ="Label" Binding="{Binding Stock.DayReturn}" Value="0">
                                <Setter Property="TextColor" Value="{DynamicResource NeutralTextColor}" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>
                
                <!--Timestamp of last price changing trade -->
                <Label x:Name ="CurrentPriceTimeStampText" Text="{Binding Stock.LastTrade, StringFormat='Updated at {0:d MMMM yyyy HH:mm:ss}'}" TextColor="{DynamicResource PrimaryTextColor}"
                       FontSize="Small" VerticalOptions="Start" HorizontalOptions="Start" Margin="10,0" />

                <Label x:Name ="KeyStatisticsLabel" Text="Key Statistics" TextColor="{DynamicResource PrimaryTextColor}" FontSize="Large"
                       VerticalOptions="Start" HorizontalOptions="Start" Margin="10,0" />

                <!--Grid of Key Statistics of Stock-->
                <Grid Margin="10, 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--Stock Statistic Details-->
                    <Label Text="{Binding Stock.PriceClose, StringFormat='Close Price: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}" Grid.Row="0" Grid.Column="0" />
                    <Label Text="{Binding Stock.PriceOpen, StringFormat='Open Price: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}" Grid.Row="0" Grid.Column="1" />
                    <Label Text="{Binding Stock.DayLow, StringFormat='Day Low: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}" Grid.Row="1" Grid.Column="0" />
                    <Label Text="{Binding Stock.DayHigh, StringFormat='Day High: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}" Grid.Row="1" Grid.Column="1" />
                    <Label Text="{Binding Stock.FiftyTwoWeekLow, StringFormat='52 Week Low: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}" Grid.Row="2" Grid.Column="0" />
                    <Label Text="{Binding Stock.FiftyTwoWeekHigh, StringFormat='52 Week High: {0:C}'}" TextColor="{DynamicResource PrimaryTextColor}" Grid.Row="2" Grid.Column="1" />
                    <Label Text="{Binding Stock.Shares, StringFormat='Shares: {0:N0}'}" TextColor="{DynamicResource PrimaryTextColor}" Grid.Row="3" Grid.Column="0" />
                    <Label Text="{Binding Stock.Volume, StringFormat='Volume: {0:N0}'}" TextColor="{DynamicResource PrimaryTextColor}" Grid.Row="3" Grid.Column="1" />
                </Grid>
              
                <!--Add to portfolio button-->
                <Button Text="Add To Portfolio" VerticalOptions="Center" HorizontalOptions="Center" FontSize="14" TextColor="DarkGreen" BackgroundColor="LightGreen" Clicked="AddToPortfolioClicked" />
                 
                <!--Add To Portfolio Popup Box-->
                <sfPopup:SfPopupLayout x:Name="StockPortfolioForm">
                    <sfPopup:SfPopupLayout.PopupView>
                        <sfPopup:PopupView HeaderTitle="Add Stock to Portfolio" ShowFooter="false">
                            <sfPopup:PopupView.ContentTemplate>
                                <DataTemplate>
                                    <StackLayout Padding="6,1,3,1">
                                        <Label Text="Number of shares purchased:" TextColor="{DynamicResource PrimaryTextColor}" HorizontalTextAlignment="Start" FontSize="12" />
                                        <textbox:SfNumericTextBox x:Name="numericTextBox" Value="0" FormatString="N0" ValueChangeMode="OnKeyFocus" ValueChanged="Handle_NumSharesChanged" ParserMode="Double" />

                                        <Label Text="Purchase price:" TextColor="{DynamicResource PrimaryTextColor}" HorizontalTextAlignment="Start" FontSize="12"/>
                                        <textbox:SfNumericTextBox x:Name="NumericTextBox2" Value="0" FormatString="C" ValueChangeMode="OnKeyFocus" ValueChanged="Handle_PriceChanged" ParserMode="Double" />
                                        
                                        <Button Text="Add" VerticalOptions="Center" HorizontalOptions="Center" FontSize="14" TextColor="DarkGreen" BackgroundColor="LightGreen" Clicked="AddInPopupClicked" />
                                    </StackLayout>
                                </DataTemplate>
                            </sfPopup:PopupView.ContentTemplate>
                        </sfPopup:PopupView>
                    </sfPopup:SfPopupLayout.PopupView>
                </sfPopup:SfPopupLayout>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>