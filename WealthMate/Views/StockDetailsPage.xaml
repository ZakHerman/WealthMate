<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:chart="clr-namespace:Syncfusion.SfChart.XForms;assembly=Syncfusion.SfChart.XForms"
             xmlns:sfPopup="clr-namespace:Syncfusion.XForms.PopupLayout;assembly=Syncfusion.SfPopupLayout.XForms"
             xmlns:textbox="clr-namespace:Syncfusion.SfNumericTextBox.XForms;assembly=Syncfusion.SfNumericTextBox.XForms"
             mc:Ignorable="d"
             x:Class="WealthMate.Views.StockDetailsPage">


    <NavigationPage.TitleView>                                              <!--Top bar details-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="26"/>                                <!--Image size of star-->
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />                              <!--Size of stock name column-->
                <ColumnDefinition Width="37" />                             <!--Size of star image column-->
            </Grid.ColumnDefinitions>

            <!--Name of stock being displayed-->
            <Label x:Name="NavBarTitle" Text="{Binding Stock.CompanyName}" HorizontalTextAlignment="Start" VerticalTextAlignment="Start"
                   FontAttributes="Bold" TextColor="White" FontSize="20" Grid.Column="0" Grid.Row="0"/>
            <!--Star image details-->
            <ImageButton Source="starunfilled.png"
                       BackgroundColor="Transparent"
                       Grid.Row="0"
                       Grid.Column="1"
                       Margin="0, 0, 15, 0"
                       Clicked="WatchListStarClicked">
                <ImageButton.Triggers>
                    <DataTrigger TargetType ="ImageButton" Binding="{Binding Watched}" Value="True">
                        <Setter Property="Source" Value="starfilled.png" />                                 <!--Change to unfilled arrow when stock is not being watched-->
                    </DataTrigger>
                </ImageButton.Triggers>
            </ImageButton>
        </Grid>
    </NavigationPage.TitleView>

    <ContentPage.Content>
        <ScrollView>                                                                    <!--Allows for scrolling in page-->
            <StackLayout Spacing="10" Padding="5" Orientation = "Vertical">
                <Label x:Name ="SymbolText" Text="{Binding Stock.Symbol}" FontSize="Large" VerticalOptions="Start" HorizontalOptions="CenterAndExpand" />

                <chart:SfChart x:Name="Chart" VerticalOptions="FillAndExpand">          <!--Stock graph details-->
                    <chart:SfChart.PrimaryAxis>                                         <!--X-Axis is Date/Time-->
                        <chart:DateTimeAxis/>
                    </chart:SfChart.PrimaryAxis>
     
                    <chart:SfChart.SecondaryAxis>                                       <!--Y-Axis is the price of the stock-->
                        <chart:NumericalAxis/>
                    </chart:SfChart.SecondaryAxis>

                    <chart:SfChart.ChartBehaviors>                                      <!--Zoom behaviour-->
                        <chart:ChartZoomPanBehavior ZoomMode="X"/>
                        <chart:ChartTrackballBehavior/>
                    </chart:SfChart.ChartBehaviors>
     
                    <chart:LineSeries ItemsSource="{Binding StockHistory.History}" XBindingPath="LastTrade" YBindingPath="CurrentPrice"/>
                </chart:SfChart>


              <!--Labels underneath graph-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26" />
                        <!--Image size of arrow-->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />           <!--Price column-->
                        <ColumnDefinition Width="auto" />           <!--Arrow column-->
                        <ColumnDefinition Width="auto" />           <!--Return column-->
                        <ColumnDefinition Width="auto" />           <!--Retrun rate column-->
                    </Grid.ColumnDefinitions>
                    <Label x:Name ="CurrentPriceText" Text="{Binding Stock.CurrentPrice, StringFormat='{0:C}'}" FontSize="Large" Margin="10, 0, 0, 0" Grid.Row="0" Grid.Column="0"/>
                    <Image Source="downarrow.png" Grid.Row="0" Grid.Column="1" Margin="0, 5, 0 , 0">
                        <Image.Triggers>                                                                                    <!--Change to upward arrow when positive return-->
                            <DataTrigger TargetType ="Image" Binding="{Binding Stock.PositiveDayReturns}" Value="True">
                                <Setter Property="Source" Value="uparrow.png" />
                            </DataTrigger>
                            <DataTrigger TargetType ="Image" Binding="{Binding Stock.DayReturn}" Value="0">
                                <Setter Property="Source" Value="horizontalline.png" />
                            </DataTrigger>
                        </Image.Triggers>
                    </Image>
                    <Label x:Name="DayReturnText" Text="{Binding Stock.DayReturn, StringFormat='({0:C})'}" FontSize ="Large" TextColor="Red" Grid.Row="0" Grid.Column="2">
                        <Label.Triggers>
                            <DataTrigger TargetType ="Label" Binding="{Binding Stock.PositiveDayReturns}"  Value="True">    <!--Change text to green when positive return-->
                                <Setter Property="TextColor" Value="Color.Green" />
                            </DataTrigger>
                            <DataTrigger TargetType ="Label" Binding="{Binding Stock.DayReturn}"  Value="0">
                                <Setter Property="TextColor" Value="Color.Gray" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label x:Name="DayReturnRateText" Text="{Binding Stock.DayReturnRate, StringFormat='({0:N}%)'}" FontSize ="Large" TextColor="Red" Grid.Row="0" Grid.Column="3">
                        <Label.Triggers>
                            <DataTrigger TargetType ="Label" Binding="{Binding Stock.PositiveDayReturns}"  Value="True">    <!--Change text to green when positive return-->
                                <Setter Property="TextColor" Value="Color.Green" />
                            </DataTrigger>
                            <DataTrigger TargetType ="Label" Binding="{Binding Stock.DayReturn}"  Value="0">
                                <Setter Property="TextColor" Value="Color.Gray" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>
                
                <Label x:Name ="CurrentPriceTimeStampText" Text="{Binding Stock.LastTrade, StringFormat='Updated at {0:d MMMM yyyy HH:mm:ss}'}" FontSize="Small" VerticalOptions="Start" HorizontalOptions="Start" Margin="10, 0" />
                <Label x:Name ="KeyStatisticsLabel" Text="Key Statistics" FontSize="Large" VerticalOptions="Start" HorizontalOptions="Start" Margin="10, 0"/>

                <!--Grid of Key Statistics of Stock-->
                <Grid Margin="10, 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />        <!--Height and Width are the maximum size-->
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--Stock Statistic Details-->
                    <Label Text="{Binding Stock.PriceClose, StringFormat='Close Price: {0:C}'}" Grid.Row="0" Grid.Column="0" />
                    <Label Text="{Binding Stock.PriceOpen, StringFormat='Open Price: {0:C}'}" Grid.Row="0" Grid.Column="1" />
                    <Label Text="{Binding Stock.DayLow, StringFormat='Day Low: {0:C}'}" Grid.Row="1" Grid.Column="0" />
                    <Label Text="{Binding Stock.DayHigh, StringFormat='Day High: {0:C}'}" Grid.Row="1" Grid.Column="1" />
                    <Label Text="{Binding Stock.FiftyTwoWeekLow, StringFormat='52 Week Low: {0:C}'}" Grid.Row="2" Grid.Column="0" />
                    <Label Text="{Binding Stock.FiftyTwoWeekHigh, StringFormat='52 Week High: {0:C}'}" Grid.Row="2" Grid.Column="1" />
                    <Label Text="{Binding Stock.Shares, StringFormat='Shares: {0:N0}'}" Grid.Row="3" Grid.Column="0" />
                    <Label Text="{Binding Stock.Volume, StringFormat='Volume: {0:N0}'}" Grid.Row="3" Grid.Column="1" />
                </Grid>
              
              <!--Add to portfolio button-->
              <Button Text="Add To Portfolio"  VerticalOptions="End" HorizontalOptions="Start" FontSize="14" TextColor="DarkGreen" BackgroundColor="LightGreen" Clicked="AddToPortfolioClicked" />
                 
         <!--Add To Portfolio Popup Box-->
              <sfPopup:SfPopupLayout x:Name="popupLayout" IsOpen="false" >
                <sfPopup:SfPopupLayout.PopupView>
                    <sfPopup:PopupView ShowHeader="false" ShowFooter="false">
                        <sfPopup:PopupView.ContentTemplate>
                            <DataTemplate>
                              <StackLayout>
                              <!--<Label Text="Add stock to portfolio" HorizontalTextAlignment="Center" Font="Bold" FontSize="16" TextColor="Black"/>-->
                                <Label Text="Number of shares purchased:" Margin="1" HorizontalTextAlignment="Start" FontSize="12" TextColor="Black"/>
                                <textbox:SfNumericTextBox x:Name="numericTextBox" Margin="3,3" ValueChangeMode="OnLostFocus" ParserMode="Decimal" />
                                <Label Text="Purchase price:" Margin="1,3" HorizontalTextAlignment="Start" FontSize="12" TextColor="Black"/>
                                <textbox:SfNumericTextBox x:Name="numericTextBox2" Margin="3,3" ValueChangeMode="OnLostFocus" ParserMode="Decimal" />
                                <Button Text="Add"  VerticalOptions="End" HorizontalOptions="Start" FontSize="10" TextColor="DarkGreen" BackgroundColor="LightGreen" Clicked="AddInPopupClicked" />
                                </StackLayout>
                            </DataTemplate>
                        </sfPopup:PopupView.ContentTemplate>
                    </sfPopup:PopupView>
                </sfPopup:SfPopupLayout.PopupView>
              </sfPopup:SfPopupLayout>
                
            
        
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>